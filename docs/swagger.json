{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/github.com/Sabyradinov/go-dating-matchmaking/api/v1",
    "paths": {
        "/match/recommendations": {
            "post": {
                "description": "method to recommend potential matches for a user based on certain criteria, such as preferences, location, and mutual interests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matching"
                ],
                "summary": "method to get potential matches",
                "responses": {
                    "200": {
                        "description": "response body",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "error body",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "error body",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse"
                        }
                    }
                }
            }
        },
        "/matching/:id": {
            "get": {
                "description": "method to get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matching"
                ],
                "summary": "method to get user by id",
                "responses": {
                    "200": {
                        "description": "response body",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "error body",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "error body",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.BaseResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}